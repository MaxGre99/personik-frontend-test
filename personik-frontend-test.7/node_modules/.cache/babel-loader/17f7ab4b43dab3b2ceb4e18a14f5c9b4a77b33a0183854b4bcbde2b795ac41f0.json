{"ast":null,"code":"var _jsxFileName = \"/home/max/Tutorials/personik-frontend-test/src/components/Game.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport '../styles/index.css';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Timer from './Timer.jsx';\nimport TimerLine from './TimerLine.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst opponenetTurn = async (cities, usedCities, lastCity) => {\n  return new Promise(resolve => {\n    const randomDelay = Math.floor(Math.random() * 241) * 1000;\n    setTimeout(() => {\n      const lastChar = lastCity.at(-1);\n      const secondLastChar = lastCity.at(-2);\n      const requiredChar = lastChar === 'ь' || lastChar === 'ъ' ? secondLastChar : lastChar;\n      const availableCities = cities.filter(city => city[0].toLowerCase() === requiredChar.toLowerCase() && !usedCities.includes(city));\n      const randomCity = availableCities[Math.floor(Math.random() * availableCities.length)];\n      resolve(randomCity);\n    }, randomDelay);\n  });\n};\nconst Game = ({\n  setVictory,\n  setGameOn,\n  usedCities,\n  setUsedCities\n}) => {\n  _s();\n  const [yourTurn, setYourTurn] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(120);\n  const [cities, setCities] = useState([]);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('./cities.txt');\n        const text = await response.text();\n        const citiesArray = text.split('\\n').map(city => city.trim());\n        setCities(citiesArray);\n      } catch (err) {\n        console.error('Cities fetching failed:', err);\n      }\n    };\n    fetchCities();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime > 0) {\n          return prevTime - 1;\n        } else if (prevTime === 0 && yourTurn === true) {\n          setGameOn(false);\n          setVictory(false);\n        } else if (prevTime === 0 && yourTurn === false) {\n          setGameOn(false);\n          setVictory(true);\n        }\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  });\n  const handleOpponentTurn = async () => {\n    const lastCity = usedCities.at(-1);\n    const opponentCity = await opponenetTurn(cities, usedCities, lastCity);\n    if (opponentCity) {\n      setUsedCities(prevUsedCities => [...prevUsedCities, opponentCity]);\n      setYourTurn(true);\n      setTimeLeft(120);\n    } else {\n      setGameOn(false);\n      setVictory(true);\n    }\n  };\n  const citySchema = yup.object().shape({\n    city: yup.string().required('Необходимо ввести название города').test('is-valid-city', 'Такого города не существует, или просто нет в базе данных игры', value => cities.includes(value)).test('is-not-duplicate', 'Такой город уже называли', value => !usedCities.includes(value)).test('is-correct-letter', 'Город должен начинаться с последней буквы предыдущего города', value => {\n      if (usedCities.length === 0) {\n        return true;\n      }\n      const lastCity = usedCities.at(-1);\n      const lastChar = lastCity.at(-1);\n      const secondLastChar = lastCity.at(-2);\n      const requiredChar = lastChar === 'ь' || lastChar === 'ъ' ? secondLastChar : lastChar;\n      return value[0].toLowerCase() === requiredChar;\n    })\n  });\n  const formik = useFormik({\n    initialValues: {\n      city: ''\n    },\n    validationSchema: citySchema,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      setUsedCities(prevUsedCities => [...prevUsedCities, values.city]);\n      resetForm();\n      setYourTurn(!yourTurn);\n      setTimeLeft(120);\n      handleOpponentTurn();\n    }\n  });\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [usedCities]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-576 h-464 border border-inherit shadow bg-white rounded-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between px-5 h-64\",\n      children: [yourTurn ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u0432\\u0430\\u0448\\u0430 \\u043E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043E\\u0447\\u0435\\u0440\\u0435\\u0434\\u044C \\u0441\\u043E\\u043F\\u0435\\u0440\\u043D\\u0438\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        timeLeft: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimerLine, {\n      timeLeft: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-320 flex flex-col items-center justify-center\",\n      children: usedCities.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-400\",\n        children: \"\\u041F\\u0435\\u0440\\u0432\\u044B\\u0439 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A \\u0432\\u0441\\u043F\\u043E\\u043C\\u0438\\u043D\\u0430\\u0435\\u0442 \\u0433\\u043E\\u0440\\u043E\\u0434\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full px-5 flex flex-col space-y-2 overflow-y-auto\",\n        children: [usedCities.map((city, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `self-${index % 2 === 0 ? 'end' : 'start'} p-2 rounded-md text-center max-w-xs ${index % 2 === 0 ? 'bg-mainColor text-white' : 'bg-violet-50'}`,\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex items-center w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: yourTurn ? 'Напишите любой город, например, где вы живёте?' : 'Ожидаем ответа соперника...',\n          className: \"w-full h-48 mx-5 px-3 border-inherit rounded-md bg-messageBoxColor\",\n          onChange: formik.handleChange,\n          onBlur: formik.onBlur,\n          value: formik.values.city,\n          name: \"city\",\n          disabled: yourTurn ? false : true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `absolute right-7 top-1/2 transform -translate-y-1/2 text-white border-inherit rounded-md ${yourTurn ? 'bg-mainColor' : 'bg-gray-400'}`,\n          disabled: yourTurn ? false : true,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            strokeWidth: \"1.5\",\n            stroke: \"currentColor\",\n            className: \"size-8\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              d: \"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), formik.touched.city && formik.errors.city ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bg-red-500 text-white text-sm border-inherit rounded px-5 my-0.5 py-0.5\",\n        children: formik.errors.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"xV61lPfxjxUCAhFE/PuCi4wg5us=\", false, function () {\n  return [useFormik];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["useEffect","useState","useRef","useFormik","yup","Timer","TimerLine","jsxDEV","_jsxDEV","opponenetTurn","cities","usedCities","lastCity","Promise","resolve","randomDelay","Math","floor","random","setTimeout","lastChar","at","secondLastChar","requiredChar","availableCities","filter","city","toLowerCase","includes","randomCity","length","Game","setVictory","setGameOn","setUsedCities","_s","yourTurn","setYourTurn","timeLeft","setTimeLeft","setCities","messagesEndRef","fetchCities","response","fetch","text","citiesArray","split","map","trim","err","console","error","timer","setInterval","prevTime","clearInterval","handleOpponentTurn","opponentCity","prevUsedCities","citySchema","object","shape","string","required","test","value","formik","initialValues","validationSchema","onSubmit","values","resetForm","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","handleSubmit","type","placeholder","onChange","handleChange","onBlur","name","disabled","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","touched","errors","_c","$RefreshReg$"],"sources":["/home/max/Tutorials/personik-frontend-test/src/components/Game.jsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport '../styles/index.css';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Timer from './Timer.jsx';\nimport TimerLine from './TimerLine.jsx';\n\nconst opponenetTurn = async (cities, usedCities, lastCity) => {\n  return new Promise((resolve) => {\n    const randomDelay = Math.floor(Math.random() * 241) * 1000;\n    setTimeout(() => {\n      const lastChar = lastCity.at(-1);\n      const secondLastChar = lastCity.at(-2);\n      const requiredChar =\n        lastChar === 'ь' || lastChar === 'ъ' ? secondLastChar : lastChar;\n\n      const availableCities = cities.filter(\n        (city) =>\n          city[0].toLowerCase() === requiredChar.toLowerCase() &&\n          !usedCities.includes(city)\n      );\n\n      const randomCity =\n        availableCities[Math.floor(Math.random() * availableCities.length)];\n\n      resolve(randomCity);\n    }, randomDelay);\n  });\n};\n\nconst Game = ({ setVictory, setGameOn, usedCities, setUsedCities }) => {\n  const [yourTurn, setYourTurn] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(120);\n  const [cities, setCities] = useState([]);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('./cities.txt');\n        const text = await response.text();\n        const citiesArray = text.split('\\n').map((city) => city.trim());\n        setCities(citiesArray);\n      } catch (err) {\n        console.error('Cities fetching failed:', err);\n      }\n    };\n\n    fetchCities();\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft((prevTime) => {\n        if (prevTime > 0) {\n          return prevTime - 1;\n        } else if (prevTime === 0 && yourTurn === true) {\n          setGameOn(false);\n          setVictory(false);\n        } else if (prevTime === 0 && yourTurn === false) {\n          setGameOn(false);\n          setVictory(true);\n        }\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  });\n\n  const handleOpponentTurn = async () => {\n    const lastCity = usedCities.at(-1);\n    const opponentCity = await opponenetTurn(cities, usedCities, lastCity);\n    if (opponentCity) {\n      setUsedCities((prevUsedCities) => [...prevUsedCities, opponentCity]);\n      setYourTurn(true);\n      setTimeLeft(120);\n    } else {\n      setGameOn(false);\n      setVictory(true);\n    }\n  };\n\n  const citySchema = yup.object().shape({\n    city: yup\n      .string()\n      .required('Необходимо ввести название города')\n      .test(\n        'is-valid-city',\n        'Такого города не существует, или просто нет в базе данных игры',\n        (value) => cities.includes(value)\n      )\n      .test(\n        'is-not-duplicate',\n        'Такой город уже называли',\n        (value) => !usedCities.includes(value)\n      )\n      .test(\n        'is-correct-letter',\n        'Город должен начинаться с последней буквы предыдущего города',\n        (value) => {\n          if (usedCities.length === 0) {\n            return true;\n          }\n          const lastCity = usedCities.at(-1);\n          const lastChar = lastCity.at(-1);\n          const secondLastChar = lastCity.at(-2);\n          const requiredChar =\n            lastChar === 'ь' || lastChar === 'ъ' ? secondLastChar : lastChar;\n          return value[0].toLowerCase() === requiredChar;\n        }\n      ),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      city: '',\n    },\n    validationSchema: citySchema,\n    onSubmit: (values, { resetForm }) => {\n      setUsedCities((prevUsedCities) => [...prevUsedCities, values.city]);\n      resetForm();\n      setYourTurn(!yourTurn);\n      setTimeLeft(120);\n      handleOpponentTurn();\n    },\n  });\n\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [usedCities]);\n\n  return (\n    <div className='w-576 h-464 border border-inherit shadow bg-white rounded-2xl'>\n      <div className='flex items-center justify-between px-5 h-64'>\n        {yourTurn ? (\n          <h1>Сейчас ваша очередь</h1>\n        ) : (\n          <h1>Сейчас очередь соперника</h1>\n        )}\n        <Timer timeLeft={timeLeft} />\n      </div>\n      <TimerLine timeLeft={timeLeft} />\n      <div className='h-320 flex flex-col items-center justify-center'>\n        {usedCities.length === 0 ? (\n          <span className='text-gray-400'>\n            Первый участник вспоминает города...\n          </span>\n        ) : (\n          <div className='w-full px-5 flex flex-col space-y-2 overflow-y-auto'>\n            {usedCities.map((city, index) => (\n              <div\n                key={index}\n                className={`self-${\n                  index % 2 === 0 ? 'end' : 'start'\n                } p-2 rounded-md text-center max-w-xs ${\n                  index % 2 === 0 ? 'bg-mainColor text-white' : 'bg-violet-50'\n                }`}>\n                {city}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n        )}\n      </div>\n      <form onSubmit={formik.handleSubmit} className='flex flex-col items-center'>\n        <div className='relative flex items-center w-full'>\n          <input\n            type='text'\n            placeholder={\n              yourTurn\n                ? 'Напишите любой город, например, где вы живёте?'\n                : 'Ожидаем ответа соперника...'\n            }\n            className='w-full h-48 mx-5 px-3 border-inherit rounded-md bg-messageBoxColor'\n            onChange={formik.handleChange}\n            onBlur={formik.onBlur}\n            value={formik.values.city}\n            name='city'\n            disabled={yourTurn ? false : true}\n          />\n          <button\n            type='submit'\n            className={`absolute right-7 top-1/2 transform -translate-y-1/2 text-white border-inherit rounded-md ${\n              yourTurn ? 'bg-mainColor' : 'bg-gray-400'\n            }`}\n            disabled={yourTurn ? false : true}>\n            <svg\n              xmlns='http://www.w3.org/2000/svg'\n              fill='none'\n              viewBox='0 0 24 24'\n              strokeWidth='1.5'\n              stroke='currentColor'\n              className='size-8'>\n              <path\n                strokeLinecap='round'\n                strokeLinejoin='round'\n                d='M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5'\n              />\n            </svg>\n          </button>\n        </div>\n        {formik.touched.city && formik.errors.city ? (\n          <p className='bg-red-500 text-white text-sm border-inherit rounded px-5 my-0.5 py-0.5'>\n            {formik.errors.city}\n          </p>\n        ) : null}\n      </form>\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}